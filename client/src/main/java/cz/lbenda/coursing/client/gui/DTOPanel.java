/*
 * Copyright 2014 Lukas Benda <lbenda at lbenda.cz>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package cz.lbenda.coursing.client.gui;

import cz.lbenda.coursing.dto.DTO;
import java.text.DateFormat;
import java.util.Locale;

/**
 *
 * @author Lukas Benda <lbenda at lbenda.cz>
 */
public class DTOPanel extends javax.swing.JPanel {

  private static final DateFormat DF = DateFormat.getDateInstance(DateFormat.SHORT, Locale.getDefault());

  /**
   * Creates new form DTOPanel
   */
  public DTOPanel() {
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT
   * modify this code. The content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    lID = new javax.swing.JLabel();
    lDateUpdate = new javax.swing.JLabel();
    lDateCreate = new javax.swing.JLabel();
    lModifier = new javax.swing.JLabel();
    lCreator = new javax.swing.JLabel();
    lIDLable = new javax.swing.JLabel();

    setBorder(javax.swing.BorderFactory.createTitledBorder(""));
    setToolTipText(org.openide.util.NbBundle.getMessage(DTOPanel.class, "DTOPanel.toolTipText")); // NOI18N

    lID.setForeground(new java.awt.Color(150, 150, 150));
    org.openide.awt.Mnemonics.setLocalizedText(lID, org.openide.util.NbBundle.getMessage(DTOPanel.class, "DTOPanel.lID.text")); // NOI18N

    lDateUpdate.setForeground(new java.awt.Color(150, 150, 150));
    org.openide.awt.Mnemonics.setLocalizedText(lDateUpdate, org.openide.util.NbBundle.getMessage(DTOPanel.class, "DTOPanel.lDateUpdate.text")); // NOI18N

    lDateCreate.setForeground(new java.awt.Color(150, 150, 150));
    org.openide.awt.Mnemonics.setLocalizedText(lDateCreate, org.openide.util.NbBundle.getMessage(DTOPanel.class, "DTOPanel.lDateCreate.text")); // NOI18N

    lModifier.setForeground(new java.awt.Color(150, 150, 150));
    org.openide.awt.Mnemonics.setLocalizedText(lModifier, org.openide.util.NbBundle.getMessage(DTOPanel.class, "DTOPanel.lModifier.text")); // NOI18N

    lCreator.setForeground(new java.awt.Color(150, 150, 150));
    org.openide.awt.Mnemonics.setLocalizedText(lCreator, org.openide.util.NbBundle.getMessage(DTOPanel.class, "DTOPanel.lCreator.text")); // NOI18N

    lIDLable.setForeground(new java.awt.Color(150, 150, 150));
    org.openide.awt.Mnemonics.setLocalizedText(lIDLable, org.openide.util.NbBundle.getMessage(DTOPanel.class, "DTOPanel.lIDLable.text")); // NOI18N

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(lIDLable)
          .addComponent(lModifier))
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addGroup(layout.createSequentialGroup()
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
            .addComponent(lID))
          .addGroup(layout.createSequentialGroup()
            .addGap(17, 17, 17)
            .addComponent(lDateUpdate)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lCreator, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(22, 22, 22)
            .addComponent(lDateCreate)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(lIDLable)
          .addComponent(lID, javax.swing.GroupLayout.Alignment.TRAILING))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(lDateCreate)
            .addComponent(lCreator)
            .addComponent(lDateUpdate))
          .addComponent(lModifier))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
  }// </editor-fold>//GEN-END:initComponents


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel lCreator;
  private javax.swing.JLabel lDateCreate;
  private javax.swing.JLabel lDateUpdate;
  private javax.swing.JLabel lID;
  private javax.swing.JLabel lIDLable;
  private javax.swing.JLabel lModifier;
  // End of variables declaration//GEN-END:variables

  public void setDTO(DTO dto) {
    lID.setText(dto.getId());
    lCreator.setText(dto.getCreator());
    lModifier.setText(dto.getModifier());
    synchronized (DF) {
      if (dto.getCreated() != null) { lDateCreate.setText(DF.format(dto.getCreated())); }
      if (dto.getModified() != null) { lDateUpdate.setText(DF.format(dto.getModified())); }
    }
  }
}
