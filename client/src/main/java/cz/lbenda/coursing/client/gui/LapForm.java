/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cz.lbenda.coursing.client.gui;

import cz.lbenda.common.IntegerHelper;
import cz.lbenda.coursing.client.ClientServiceLocator;
import cz.lbenda.coursing.client.gui.node.DogLapChildFactory;
import cz.lbenda.coursing.dto.Lap;
import cz.lbenda.coursing.dto.Race;
import cz.lbenda.coursing.service.RaceService;
import java.awt.BorderLayout;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.view.OutlineView;
import org.openide.nodes.AbstractNode;
import org.openide.nodes.Children;
import org.openide.util.NbBundle.Messages;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * @author Lukas Benda <lbenda at lbenda.cz>
 */
@Messages({
  "DLG_LapForm_Save=Save changes in lap",
  "DN_DogLap_agility=Agility",
  "DN_DogLap_endurance=Endurance",
  "DN_DogLap_enthusiasm=Enthusiasm",
  "DN_DogLap_speed=Speed"
})
public class LapForm extends javax.swing.JPanel implements ExplorerManager.Provider {

  private static final Logger LOG = LoggerFactory.getLogger(LapForm.class);

  private OutlineView ov = new OutlineView();
  private final ExplorerManager em = new ExplorerManager();
  private DTOPanel dtoPanel;
  private final Lap lap;

  /** Creates new form LapForm */
  public LapForm(Lap lap) {
    initComponents();
    initComponentsDTO();
    pDogLap.setLayout(new BorderLayout());
    pDogLap.add(BorderLayout.CENTER, ov);
    ov.getOutline().setRootVisible(false);

    this.lap = lap;
    dtoPanel.setDTO(lap);
    tfLength.setText(IntegerHelper.integerToString(lap.getLapLength()));

    AbstractNode an = new AbstractNode(Children.create(new DogLapChildFactory(lap), true));
    an.setName("Dogs in lap"); // FIXME

    em.setRootContext(an);
    definePropertyAndHint();
  }

  private void initComponentsDTO() {
    pDTO.setLayout(new BorderLayout());
    dtoPanel = new DTOPanel();
    pDTO.add(dtoPanel, BorderLayout.CENTER);
  }

  private void definePropertyAndHint() {
    String[] nameDispName = new String[] {
      "agility", Bundle.DN_DogLap_agility(), "endurance", Bundle.DN_DogLap_endurance(),
      "enthusiasm", Bundle.DN_DogLap_enthusiasm(), "speed", Bundle.DN_DogLap_speed()
    };
    ov.setPropertyColumns(nameDispName);
  }

  @Override
  public ExplorerManager getExplorerManager() {
    return em;
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT
   * modify this code. The content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    pDTO = new javax.swing.JPanel();
    lLength = new javax.swing.JLabel();
    tfLength = new javax.swing.JTextField();
    pDogLap = new javax.swing.JPanel();

    pDTO.setMaximumSize(new java.awt.Dimension(32767, 60));
    pDTO.setMinimumSize(new java.awt.Dimension(100, 60));
    pDTO.setPreferredSize(new java.awt.Dimension(0, 60));

    javax.swing.GroupLayout pDTOLayout = new javax.swing.GroupLayout(pDTO);
    pDTO.setLayout(pDTOLayout);
    pDTOLayout.setHorizontalGroup(
      pDTOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 534, Short.MAX_VALUE)
    );
    pDTOLayout.setVerticalGroup(
      pDTOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 60, Short.MAX_VALUE)
    );

    org.openide.awt.Mnemonics.setLocalizedText(lLength, org.openide.util.NbBundle.getMessage(LapForm.class, "LapForm.lLength.text")); // NOI18N

    tfLength.setText(org.openide.util.NbBundle.getMessage(LapForm.class, "LapForm.tfLength.text")); // NOI18N

    javax.swing.GroupLayout pDogLapLayout = new javax.swing.GroupLayout(pDogLap);
    pDogLap.setLayout(pDogLapLayout);
    pDogLapLayout.setHorizontalGroup(
      pDogLapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 0, Short.MAX_VALUE)
    );
    pDogLapLayout.setVerticalGroup(
      pDogLapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 211, Short.MAX_VALUE)
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(pDTO, javax.swing.GroupLayout.DEFAULT_SIZE, 534, Short.MAX_VALUE)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(pDogLap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addGroup(layout.createSequentialGroup()
            .addComponent(lLength)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(tfLength)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addComponent(pDTO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(lLength)
          .addComponent(tfLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(pDogLap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addContainerGap())
    );
  }// </editor-fold>//GEN-END:initComponents

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel lLength;
  private javax.swing.JPanel pDTO;
  private javax.swing.JPanel pDogLap;
  private javax.swing.JTextField tfLength;
  // End of variables declaration//GEN-END:variables


  public Lap getLap() {
    lap.setLapLength(IntegerHelper.stringToInteger(tfLength.getText()));
    return lap;
  }

  public static void showDialog(Lap lap) {
    final LapForm form = new LapForm(lap);
    NotifyDescriptor nd = new NotifyDescriptor.Confirmation(form, Bundle.DLG_LapForm_Save(),
            NotifyDescriptor.OK_CANCEL_OPTION);
    if (NotifyDescriptor.OK_OPTION.equals(DialogDisplayer.getDefault().notify(nd))) {
      Race race = lap.getRace();
      if (!race.getLaps().contains(form.getLap())) { race.getLaps().add(form.getLap()); }
      RaceService raceService = ClientServiceLocator.getInstance().getBean(RaceService.class);
      raceService.save(race);
    }
  }
}
